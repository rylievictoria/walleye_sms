{"ast":null,"code":"import { apiRequest } from \"./util\";\nexport async function sendSms(number, message) {\n  // Create a twilio session\n  return await apiRequest(\"twilio-send-sms\", \"POST\", {\n    to: String(number),\n    // Need someway to enforce number format\n    message: message\n  });\n}\nexport function batchSms(numbers, message) {\n  // Text request\n  return numbers.forEach(async num => {\n    await sendSms(num, message).then(status => {\n      return {\n        to: status.to,\n        from: status.from,\n        body: status.body,\n        dateSent: status.dateSent,\n        errorMessage: status.errorMessage,\n        price: status.price\n      };\n    }).catch(error => {\n      alert(error.message);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/twilio.js"],"names":["apiRequest","sendSms","number","message","to","String","batchSms","numbers","forEach","num","then","status","from","body","dateSent","errorMessage","price","catch","error","alert"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AAEA,OAAO,eAAeC,OAAf,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AAC3C;AACA,SAAO,MAAMH,UAAU,CAAC,iBAAD,EAAoB,MAApB,EAA4B;AAC/CI,IAAAA,EAAE,EAAEC,MAAM,CAACH,MAAD,CADqC;AAC1B;AACrBC,IAAAA,OAAO,EAAEA;AAFsC,GAA5B,CAAvB;AAIH;AAED,OAAO,SAASG,QAAT,CAAkBC,OAAlB,EAA2BJ,OAA3B,EAAoC;AACvC;AACA,SAAOI,OAAO,CAACC,OAAR,CAAgB,MAAOC,GAAP,IAAe;AAClC,UAAMR,OAAO,CAACQ,GAAD,EAAMN,OAAN,CAAP,CACLO,IADK,CACCC,MAAD,IAAY;AACd,aAAO;AACHP,QAAAA,EAAE,EAAEO,MAAM,CAACP,EADR;AAEHQ,QAAAA,IAAI,EAAED,MAAM,CAACC,IAFV;AAGHC,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAHV;AAIHC,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QAJd;AAKHC,QAAAA,YAAY,EAAEJ,MAAM,CAACI,YALlB;AAMHC,QAAAA,KAAK,EAAEL,MAAM,CAACK;AANX,OAAP;AAQH,KAVK,EAWLC,KAXK,CAWEC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAACD,KAAK,CAACf,OAAP,CAAL;AACH,KAbK,CAAN;AAcH,GAfM,CAAP;AAgBH","sourcesContent":["import { apiRequest } from \"./util\";\n\nexport async function sendSms(number, message) {\n    // Create a twilio session\n    return await apiRequest(\"twilio-send-sms\", \"POST\", {\n        to: String(number),  // Need someway to enforce number format\n        message: message\n    });\n}\n\nexport function batchSms(numbers, message) {\n    // Text request\n    return numbers.forEach(async (num) => {\n        await sendSms(num, message)\n        .then((status) => {\n            return {\n                to: status.to,\n                from: status.from,\n                body: status.body,\n                dateSent: status.dateSent,\n                errorMessage: status.errorMessage,\n                price: status.price\n            };\n        })\n        .catch((error) => {\n            alert(error.message);\n        });\n    });\n}"]},"metadata":{},"sourceType":"module"}