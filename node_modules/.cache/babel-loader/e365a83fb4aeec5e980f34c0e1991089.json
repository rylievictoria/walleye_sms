{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/AuthForm.js\";\nimport React, { useState } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AuthForm(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors,\n    getValues\n  } = useForm();\n  const submitHandlersByType = {\n    signin: ({\n      email,\n      pass\n    }) => {\n      return auth.signin(email, pass).then(user => {\n        // Call auth complete handler\n        props.onAuth(user);\n      });\n    },\n    signup: ({\n      email,\n      pass\n    }) => {\n      return auth.signup(email, pass).then(user => {\n        // Call auth complete handler\n        props.onAuth(user);\n      });\n    },\n    forgotpass: ({\n      email\n    }) => {\n      return auth.sendPasswordResetEmail(email).then(() => {\n        // Show success alert message\n        props.onFormAlert({\n          type: \"success\",\n          message: \"Password reset email sent\"\n        });\n      });\n    },\n    changepass: ({\n      pass\n    }) => {\n      return auth.confirmPasswordReset(pass).then(() => {\n        // Show success alert message\n        props.onFormAlert({\n          type: \"success\",\n          message: \"Your password has been changed\"\n        });\n      });\n    }\n  }; // Handle form submission\n\n  const onSubmit = ({\n    email,\n    pass\n  }) => {\n    // Show pending indicator\n    setPending(true); // Call submit handler for auth type\n\n    submitHandlersByType[props.type]({\n      email,\n      pass\n    }).catch(error => {\n      // Show error alert message\n      props.onFormAlert({\n        type: \"error\",\n        message: error.message\n      });\n    }).finally(() => {\n      // Hide pending indicator\n      setPending(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, [\"signup\", \"signin\", \"forgotpass\"].includes(props.type) && /*#__PURE__*/React.createElement(FormField, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    error: errors.email,\n    inputRef: register({\n      required: \"Please enter an email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), [\"signup\", \"signin\", \"changepass\"].includes(props.type) && /*#__PURE__*/React.createElement(FormField, {\n    size: props.inputSize,\n    name: \"pass\",\n    type: \"password\",\n    placeholder: \"Password\",\n    error: errors.pass,\n    inputRef: register({\n      required: \"Please enter a password\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), [\"signup\", \"changepass\"].includes(props.type) && /*#__PURE__*/React.createElement(FormField, {\n    size: props.inputSize,\n    name: \"confirmPass\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    error: errors.confirmPass,\n    inputRef: register({\n      required: \"Please enter your password again\",\n      validate: value => {\n        if (value === getValues().pass) {\n          return true;\n        } else {\n          return \"This doesn't match your password\";\n        }\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"control \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionButton, {\n    parentColor: props.parentColor,\n    size: \"medium\",\n    fullWidth: true,\n    state: pending ? \"loading\" : \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, props.typeValues.buttonText))));\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/AuthForm.js"],"names":["React","useState","FormField","SectionButton","useAuth","useForm","AuthForm","props","auth","pending","setPending","handleSubmit","register","errors","getValues","submitHandlersByType","signin","email","pass","then","user","onAuth","signup","forgotpass","sendPasswordResetEmail","onFormAlert","type","message","changepass","confirmPasswordReset","onSubmit","catch","error","finally","includes","required","inputSize","confirmPass","validate","value","parentColor","typeValues","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AuthForm(props) {\n  const auth = useAuth();\n\n  const [pending, setPending] = useState(false);\n  const { handleSubmit, register, errors, getValues } = useForm();\n\n  const submitHandlersByType = {\n    signin: ({ email, pass }) => {\n      return auth.signin(email, pass).then((user) => {\n        // Call auth complete handler\n        props.onAuth(user);\n      });\n    },\n    signup: ({ email, pass }) => {\n      return auth.signup(email, pass).then((user) => {\n        // Call auth complete handler\n        props.onAuth(user);\n      });\n    },\n    forgotpass: ({ email }) => {\n      return auth.sendPasswordResetEmail(email).then(() => {\n        // Show success alert message\n        props.onFormAlert({\n          type: \"success\",\n          message: \"Password reset email sent\",\n        });\n      });\n    },\n    changepass: ({ pass }) => {\n      return auth.confirmPasswordReset(pass).then(() => {\n        // Show success alert message\n        props.onFormAlert({\n          type: \"success\",\n          message: \"Your password has been changed\",\n        });\n      });\n    },\n  };\n\n  // Handle form submission\n  const onSubmit = ({ email, pass }) => {\n    // Show pending indicator\n    setPending(true);\n\n    // Call submit handler for auth type\n    submitHandlersByType[props.type]({\n      email,\n      pass,\n    })\n      .catch((error) => {\n        // Show error alert message\n        props.onFormAlert({\n          type: \"error\",\n          message: error.message,\n        });\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {[\"signup\", \"signin\", \"forgotpass\"].includes(props.type) && (\n        <FormField\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          error={errors.email}\n          inputRef={register({\n            required: \"Please enter an email\",\n          })}\n        />\n      )}\n\n      {[\"signup\", \"signin\", \"changepass\"].includes(props.type) && (\n        <FormField\n          size={props.inputSize}\n          name=\"pass\"\n          type=\"password\"\n          placeholder=\"Password\"\n          error={errors.pass}\n          inputRef={register({\n            required: \"Please enter a password\",\n          })}\n        />\n      )}\n\n      {[\"signup\", \"changepass\"].includes(props.type) && (\n        <FormField\n          size={props.inputSize}\n          name=\"confirmPass\"\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          error={errors.confirmPass}\n          inputRef={register({\n            required: \"Please enter your password again\",\n            validate: (value) => {\n              if (value === getValues().pass) {\n                return true;\n              } else {\n                return \"This doesn't match your password\";\n              }\n            },\n          })}\n        />\n      )}\n\n      <div className=\"field\">\n        <p className=\"control \">\n          <SectionButton\n            parentColor={props.parentColor}\n            size=\"medium\"\n            fullWidth={true}\n            state={pending ? \"loading\" : \"normal\"}\n          >\n            {props.typeValues.buttonText}\n          </SectionButton>\n        </p>\n      </div>\n    </form>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}