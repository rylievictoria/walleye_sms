{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{GoogleSpreadsheet}from\"google-spreadsheet\";export function filterNumbers(data,customers,phoneCol){var numbers=[];// Asks if customer has all filters\nObject.keys(data).forEach(function(d){var _d$split=d.split('|||'),_d$split2=_slicedToArray(_d$split,2),q=_d$split2[0],value=_d$split2[1];if(data[d]&&d!==\"message\"){for(var i=0;i<customers[q].responses.length;i++){if(customers[q].responses[i]===value){numbers.push(customers[phoneCol].options[i]);}else if(customers[q].responses[i].indexOf(value)>=0){numbers.push(customers[phoneCol].options[i]);}// Uncomment to remove number of customer if value is not included in filter\n// else if (numbers.indexOf(customers[phoneCol].options[i]) >= 0) {\n//     numbers.remote(customers[phoneCol].options[i]);\n// }\n}}});numbers=_toConsumableArray(new Set(numbers));return numbers;}export function formatResponses(questions,responses){var obj={};var _loop=function _loop(i){var q=questions[i];var all=[];var a=responses.map(function(r){if(r[i]&&r[i].trim()){var _all;(_all=all).push.apply(_all,_toConsumableArray(r[i].split(',')));}return r[i];});all=_toConsumableArray(new Set(all));if(all.length>0){obj[q]={responses:a,options:all};}};for(var i=0;i<questions.length;i++){_loop(i);}return obj;}// Fetch a Google Sheet\nexport function getResponses(_x){return _getResponses.apply(this,arguments);}function _getResponses(){_getResponses=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(sheetLink){var sheetID,pageID,doc,sheet,rows,responses,questions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:sheetID=sheetLink.slice(sheetLink.lastIndexOf(\"/d/\")+3,sheetLink.lastIndexOf('/edit#'));pageID=sheetLink.slice(sheetLink.lastIndexOf(\"gid=\")+4,sheetLink.length);doc=new GoogleSpreadsheet(sheetID,pageID);_context.prev=3;_context.next=6;return doc.useApiKey(process.env.REACT_APP_SHEETS_API_KEY);case 6:_context.next=8;return doc.loadInfo();case 8:sheet=doc.sheetsById[pageID];_context.next=11;return sheet.getRows();case 11:rows=_context.sent;responses=rows.map(function(r){return r._rawData;});_context.next=15;return sheet.loadHeaderRow();case 15:questions=sheet.headerValues;return _context.abrupt(\"return\",formatResponses(questions,responses));case 19:_context.prev=19;_context.t0=_context[\"catch\"](3);console.error('Error: ',_context.t0);case 22:case\"end\":return _context.stop();}}},_callee,null,[[3,19]]);}));return _getResponses.apply(this,arguments);}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/sheets.js"],"names":["GoogleSpreadsheet","filterNumbers","data","customers","phoneCol","numbers","Object","keys","forEach","d","split","q","value","i","responses","length","push","options","indexOf","Set","formatResponses","questions","obj","all","a","map","r","trim","getResponses","sheetLink","sheetID","slice","lastIndexOf","pageID","doc","useApiKey","process","env","REACT_APP_SHEETS_API_KEY","loadInfo","sheet","sheetsById","getRows","rows","_rawData","loadHeaderRow","headerValues","console","error"],"mappings":"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","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\n\nexport function filterNumbers(data, customers, phoneCol) {\n    let numbers = [];\n    // Asks if customer has all filters\n    Object.keys(data).forEach((d) => {\n        const [q, value] = d.split('|||');\n        if (data[d] && d !== \"message\") {\n            for(let i=0; i<customers[q].responses.length; i++) {\n                if (customers[q].responses[i] === value) {\n                    numbers.push(customers[phoneCol].options[i]);\n                } else if (customers[q].responses[i].indexOf(value) >= 0) {\n                    numbers.push(customers[phoneCol].options[i]);\n                }\n                // Uncomment to remove number of customer if value is not included in filter\n                // else if (numbers.indexOf(customers[phoneCol].options[i]) >= 0) {\n                //     numbers.remote(customers[phoneCol].options[i]);\n                // }\n            }\n        }\n    });\n    numbers = [...new Set(numbers)];\n    return numbers;\n}\n\nexport function formatResponses(questions, responses) {\n    let obj = {};\n    for (let i = 0; i < questions.length; i++) {\n        let q = questions[i];\n        let all = [];\n        let a = responses.map((r) => {\n            if (r[i] && r[i].trim()) {\n                all.push(...r[i].split(','));\n            }\n            return r[i];\n        });\n        all = [...new Set(all)];\n        if (all.length > 0) {\n            obj[q] = {\n                responses: a,\n                options: all\n            };\n        }\n    }\n    return obj;\n}\n\n// Fetch a Google Sheet\nexport async function getResponses(sheetLink) {\n    const sheetID = sheetLink.slice(sheetLink.lastIndexOf(\"/d/\") + 3, sheetLink.lastIndexOf('/edit#'));\n    const pageID = sheetLink.slice(sheetLink.lastIndexOf(\"gid=\") + 4, sheetLink.length);\n\n    const doc = new GoogleSpreadsheet(sheetID, pageID);\n\n    try {\n        await doc.useApiKey(process.env.REACT_APP_SHEETS_API_KEY);\n        await doc.loadInfo();\n        let sheet = doc.sheetsById[pageID];\n        let rows = await sheet.getRows();\n        let responses = rows.map(r => r._rawData);\n        await sheet.loadHeaderRow();\n        let questions = sheet.headerValues;\n        return formatResponses(questions, responses);\n    } catch (e) {\n        console.error('Error: ', e);\n    }\n  }"]},"metadata":{},"sourceType":"module"}