{"ast":null,"code":"import _slicedToArray from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import FormField from\"./FormField\";import SectionButton from\"./SectionButton\";import{useAuth}from\"./../util/auth.js\";import{useForm}from\"react-hook-form\";function DashboardHome(props){var auth=useAuth();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pending=_useState2[0],setPending=_useState2[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var onSubmit=function onSubmit(data){// Show pending indicator\nsetPending(true);// Need to verify URL is valid\n// Need to verify phone column is in sheet once URL is valid\nreturn auth.updateProfile(data).then(function(){// Set success status\nprops.onStatus({type:\"success\",message:\"Your form settings have been updated.\"});}).catch(function(error){if(error.code===\"auth/requires-recent-login\"){props.onStatus({type:\"requires-recent-login\",// Resubmit after reauth flow\ncallback:function callback(){return onSubmit(data);}});}else{// Set error status\nprops.onStatus({type:\"error\",message:error.message});}}).finally(function(){// Hide pending indicator\nsetPending(false);});};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(FormField,{name:\"sheetLink\",type:\"text\",label:\"Copy & paste the URL to the Google sheet where your form responses go:\",defaultValue:auth.user.sheetLink,placeholder:\"https://docs.google.com/spreadsheets/...\",error:errors.sheetLink,inputRef:register({required:\"Please enter a valid sheet URL.\"})}),/*#__PURE__*/React.createElement(FormField,{name:\"phoneCol\",type:\"text\",label:\"Copy the title of the column where all of the phone numbers are:\",defaultValue:auth.user.phoneCol,placeholder:\"What is your phone #?\",error:errors.phoneCol,inputRef:register({required:\"Please enter a valid column title within your sheet. They must be in the top row.\"})}),/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(SectionButton,{parentColor:props.parentColor,size:\"medium\",state:pending?\"loading\":\"normal\"},\"Save\"))));}export default DashboardHome;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/DashboardHome.js"],"names":["React","useState","FormField","SectionButton","useAuth","useForm","DashboardHome","props","auth","pending","setPending","register","handleSubmit","errors","onSubmit","data","updateProfile","then","onStatus","type","message","catch","error","code","callback","finally","user","sheetLink","required","phoneCol","parentColor"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,GAAMC,CAAAA,IAAI,CAAGJ,OAAO,EAApB,CAD4B,cAEEH,QAAQ,CAAC,KAAD,CAFV,wCAErBQ,OAFqB,eAEZC,UAFY,4BAIeL,OAAO,EAJtB,CAIpBM,QAJoB,UAIpBA,QAJoB,CAIVC,YAJU,UAIVA,YAJU,CAIIC,MAJJ,UAIIA,MAJJ,CAM5B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACzB;AACAL,UAAU,CAAC,IAAD,CAAV,CAEA;AACA;AAEA,MAAOF,CAAAA,IAAI,CACRQ,aADI,CACUD,IADV,EAEJE,IAFI,CAEC,UAAM,CACV;AACAV,KAAK,CAACW,QAAN,CAAe,CACbC,IAAI,CAAE,SADO,CAEbC,OAAO,CAAE,uCAFI,CAAf,EAID,CARI,EASJC,KATI,CASE,SAACC,KAAD,CAAW,CAChB,GAAIA,KAAK,CAACC,IAAN,GAAe,4BAAnB,CAAiD,CAC/ChB,KAAK,CAACW,QAAN,CAAe,CACbC,IAAI,CAAE,uBADO,CAEb;AACAK,QAAQ,CAAE,0BAAMV,CAAAA,QAAQ,CAACC,IAAD,CAAd,EAHG,CAAf,EAKD,CAND,IAMO,CACL;AACAR,KAAK,CAACW,QAAN,CAAe,CACbC,IAAI,CAAE,OADO,CAEbC,OAAO,CAAEE,KAAK,CAACF,OAFF,CAAf,EAID,CACF,CAvBI,EAwBJK,OAxBI,CAwBI,UAAM,CACb;AACAf,UAAU,CAAC,KAAD,CAAV,CACD,CA3BI,CAAP,CA4BD,CAnCD,CAqCA,mBACE,4BAAM,QAAQ,CAAEE,YAAY,CAACE,QAAD,CAA5B,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,WADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,wEAHR,CAIE,YAAY,CAAEN,IAAI,CAACkB,IAAL,CAAUC,SAJ1B,CAKE,WAAW,CAAC,0CALd,CAME,KAAK,CAAEd,MAAM,CAACc,SANhB,CAOE,QAAQ,CAAEhB,QAAQ,CAAC,CACjBiB,QAAQ,CAAE,iCADO,CAAD,CAPpB,EADF,cAYE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,kEAHR,CAIE,YAAY,CAAEpB,IAAI,CAACkB,IAAL,CAAUG,QAJ1B,CAKE,WAAW,CAAC,uBALd,CAME,KAAK,CAAEhB,MAAM,CAACgB,QANhB,CAOE,QAAQ,CAAElB,QAAQ,CAAC,CACjBiB,QAAQ,CACN,mFAFe,CAAD,CAPpB,EAZF,cAwBE,2BAAK,SAAS,CAAC,OAAf,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,aAAD,EACE,WAAW,CAAErB,KAAK,CAACuB,WADrB,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAErB,OAAO,CAAG,SAAH,CAAe,QAH/B,SADF,CADF,CAxBF,CADF,CAsCD,CAED,cAAeH,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction DashboardHome(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    // Need to verify URL is valid\n    // Need to verify phone column is in sheet once URL is valid\n\n    return auth\n      .updateProfile(data)\n      .then(() => {\n        // Set success status\n        props.onStatus({\n          type: \"success\",\n          message: \"Your form settings have been updated.\",\n        });\n      })\n      .catch((error) => {\n        if (error.code === \"auth/requires-recent-login\") {\n          props.onStatus({\n            type: \"requires-recent-login\",\n            // Resubmit after reauth flow\n            callback: () => onSubmit(data),\n          });\n        } else {\n          // Set error status\n          props.onStatus({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormField\n        name=\"sheetLink\"\n        type=\"text\"\n        label=\"Copy & paste the URL to the Google sheet where your form responses go:\"\n        defaultValue={auth.user.sheetLink}\n        placeholder=\"https://docs.google.com/spreadsheets/...\"\n        error={errors.sheetLink}\n        inputRef={register({\n          required: \"Please enter a valid sheet URL.\",\n        })}\n      />\n      <FormField\n        name=\"phoneCol\"\n        type=\"text\"\n        label=\"Copy the title of the column where all of the phone numbers are:\"\n        defaultValue={auth.user.phoneCol}\n        placeholder=\"What is your phone #?\"\n        error={errors.phoneCol}\n        inputRef={register({\n          required:\n            \"Please enter a valid column title within your sheet. They must be in the top row.\",\n        })}\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <SectionButton\n            parentColor={props.parentColor}\n            size=\"medium\"\n            state={pending ? \"loading\" : \"normal\"}\n          >\n            Save\n          </SectionButton>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default DashboardHome;\n"]},"metadata":{},"sourceType":"module"}