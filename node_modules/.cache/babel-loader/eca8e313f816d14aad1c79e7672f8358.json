{"ast":null,"code":"import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { useState, useEffect } from \"react\"; // Fetch a Google Sheet\n\nasync function getSheet(sheetLink) {\n  const sheetID = sheetLink.slice(sheetLink.lastIndexOf(\"/d/\") + 3, sheetLink.lastIndexOf('/edit#'));\n  const pageID = sheetLink.slice(sheetLink.lastIndexOf(\"gid=\") + 4, sheetLink.length);\n  const doc = new GoogleSpreadsheet(sheetID, pageID);\n  const client_email = process.env.REACT_APP_SHEETS_CLIENT_EMAIL;\n  const private_key = process.env.REACT_APP_SHEETS_PRIVATE_KEY;\n\n  try {\n    await doc.useApiKey(process.env.REACT_APP_SHEETS_API_KEY);\n    await doc.loadInfo();\n    let sheet = doc.sheetsById[pageID];\n    let rows = await sheet.getRows();\n    await sheet.loadHeaderRow();\n    console.log(sheet);\n    console.log(rows);\n  } catch (e) {\n    console.error('Error: ', e);\n  }\n}\n\nexport function getResponses(sheetLink) {\n  const sheet = getSheet(sheetLink).then(sheet => {\n    return sheet;\n  });\n  console.log(sheet);\n}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/sheets.js"],"names":["GoogleSpreadsheet","useState","useEffect","getSheet","sheetLink","sheetID","slice","lastIndexOf","pageID","length","doc","client_email","process","env","REACT_APP_SHEETS_CLIENT_EMAIL","private_key","REACT_APP_SHEETS_PRIVATE_KEY","useApiKey","REACT_APP_SHEETS_API_KEY","loadInfo","sheet","sheetsById","rows","getRows","loadHeaderRow","console","log","e","error","getResponses","then"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,eAAeC,QAAf,CAAwBC,SAAxB,EAAmC;AAC/B,QAAMC,OAAO,GAAGD,SAAS,CAACE,KAAV,CAAgBF,SAAS,CAACG,WAAV,CAAsB,KAAtB,IAA+B,CAA/C,EAAkDH,SAAS,CAACG,WAAV,CAAsB,QAAtB,CAAlD,CAAhB;AACA,QAAMC,MAAM,GAAGJ,SAAS,CAACE,KAAV,CAAgBF,SAAS,CAACG,WAAV,CAAsB,MAAtB,IAAgC,CAAhD,EAAmDH,SAAS,CAACK,MAA7D,CAAf;AAEA,QAAMC,GAAG,GAAG,IAAIV,iBAAJ,CAAsBK,OAAtB,EAA+BG,MAA/B,CAAZ;AACA,QAAMG,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,6BAAjC;AACA,QAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,4BAAhC;;AAEA,MAAI;AACA,UAAMN,GAAG,CAACO,SAAJ,CAAcL,OAAO,CAACC,GAAR,CAAYK,wBAA1B,CAAN;AACA,UAAMR,GAAG,CAACS,QAAJ,EAAN;AACA,QAAIC,KAAK,GAAGV,GAAG,CAACW,UAAJ,CAAeb,MAAf,CAAZ;AACA,QAAIc,IAAI,GAAG,MAAMF,KAAK,CAACG,OAAN,EAAjB;AACA,UAAMH,KAAK,CAACI,aAAN,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GARD,CAQE,OAAOK,CAAP,EAAU;AACRF,IAAAA,OAAO,CAACG,KAAR,CAAc,SAAd,EAAyBD,CAAzB;AACH;AACF;;AAEH,OAAO,SAASE,YAAT,CAAsBzB,SAAtB,EAAiC;AAEpC,QAAMgB,KAAK,GAAGjB,QAAQ,CAACC,SAAD,CAAR,CAAoB0B,IAApB,CAAyBV,KAAK,IAAI;AAAE,WAAOA,KAAP;AAAe,GAAnD,CAAd;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport { useState, useEffect } from \"react\";\n\n// Fetch a Google Sheet\nasync function getSheet(sheetLink) {\n    const sheetID = sheetLink.slice(sheetLink.lastIndexOf(\"/d/\") + 3, sheetLink.lastIndexOf('/edit#'));\n    const pageID = sheetLink.slice(sheetLink.lastIndexOf(\"gid=\") + 4, sheetLink.length);\n\n    const doc = new GoogleSpreadsheet(sheetID, pageID);\n    const client_email = process.env.REACT_APP_SHEETS_CLIENT_EMAIL;\n    const private_key = process.env.REACT_APP_SHEETS_PRIVATE_KEY;\n\n    try {\n        await doc.useApiKey(process.env.REACT_APP_SHEETS_API_KEY);\n        await doc.loadInfo();\n        let sheet = doc.sheetsById[pageID];\n        let rows = await sheet.getRows();\n        await sheet.loadHeaderRow();\n        console.log(sheet);\n        console.log(rows);\n    } catch (e) {\n        console.error('Error: ', e);\n    }\n  }\n\nexport function getResponses(sheetLink) {\n\n    const sheet = getSheet(sheetLink).then(sheet => { return sheet; })\n\n    console.log(sheet);\n}"]},"metadata":{},"sourceType":"module"}