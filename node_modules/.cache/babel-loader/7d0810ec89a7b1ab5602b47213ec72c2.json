{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/Contact.js\";\nimport React, { useState } from \"react\";\nimport FormAlert from \"./FormAlert\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport contact from \"./../util/contact.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Contact(props) {\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n  const {\n    handleSubmit,\n    register,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    // Show pending indicator\n    setPending(true);\n    contact.submit(data).then(() => {\n      // Clear form\n      reset(); // Show success alert message\n\n      setFormAlert({\n        type: \"success\",\n        message: \"Your message has been sent!\"\n      });\n    }).catch(error => {\n      // Show error alert message\n      setFormAlert({\n        type: \"error\",\n        message: error.message\n      });\n    }).finally(() => {\n      // Hide pending indicator\n      setPending(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, props.showNameField && /*#__PURE__*/React.createElement(FormField, {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    error: errors.name,\n    inputRef: register({\n      required: \"Please enter your name\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    error: errors.email,\n    inputRef: register({\n      required: \"Please enter your email\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    name: \"message\",\n    type: \"textarea\",\n    placeholder: \"Message\",\n    rows: 5,\n    error: errors.message,\n    inputRef: register({\n      required: \"Please enter a message\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field is-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SectionButton, {\n    parentColor: props.parentColor,\n    size: \"medium\",\n    state: pending ? \"loading\" : \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, props.buttonText)))))));\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/Contact.js"],"names":["React","useState","FormAlert","FormField","SectionButton","contact","useForm","Contact","props","pending","setPending","formAlert","setFormAlert","handleSubmit","register","errors","reset","onSubmit","data","submit","then","type","message","catch","error","finally","showNameField","name","required","email","parentColor","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormAlert from \"./FormAlert\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport contact from \"./../util/contact.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Contact(props) {\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    contact\n      .submit(data)\n      .then(() => {\n        // Clear form\n        reset();\n        // Show success alert message\n        setFormAlert({\n          type: \"success\",\n          message: \"Your message has been sent!\",\n        });\n      })\n      .catch((error) => {\n        // Show error alert message\n        setFormAlert({\n          type: \"error\",\n          message: error.message,\n        });\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <>\n      {formAlert && (\n        <FormAlert type={formAlert.type} message={formAlert.message} />\n      )}\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"field is-horizontal\">\n          <div className=\"field-body\">\n            {props.showNameField && (\n              <FormField\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                error={errors.name}\n                inputRef={register({\n                  required: \"Please enter your name\",\n                })}\n              />\n            )}\n\n            <FormField\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              error={errors.email}\n              inputRef={register({\n                required: \"Please enter your email\",\n              })}\n            />\n          </div>\n        </div>\n        <div className=\"field is-horizontal\">\n          <div className=\"field-body\">\n            <FormField\n              name=\"message\"\n              type=\"textarea\"\n              placeholder=\"Message\"\n              rows={5}\n              error={errors.message}\n              inputRef={register({\n                required: \"Please enter a message\",\n              })}\n            />\n          </div>\n        </div>\n        <div className=\"field is-horizontal\">\n          <div className=\"field-body\">\n            <div className=\"field\">\n              <div className=\"control\">\n                <SectionButton\n                  parentColor={props.parentColor}\n                  size=\"medium\"\n                  state={pending ? \"loading\" : \"normal\"}\n                >\n                  {props.buttonText}\n                </SectionButton>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}