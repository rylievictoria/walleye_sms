{"ast":null,"code":"import _slicedToArray from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import SectionButton from\"./SectionButton\";import newsletter from\"./../util/newsletter.js\";import{useForm}from\"react-hook-form\";function Newsletter(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),subscribed=_useState2[0],setSubscribed=_useState2[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,register=_useForm.register,errors=_useForm.errors;var onSubmit=function onSubmit(_ref){var email=_ref.email;setSubscribed(true);// Parent component can optionally\n// find out when subscribed.\nprops.onSubscribed&&props.onSubscribed();// Subscribe them\nnewsletter.subscribe({email:email});};return/*#__PURE__*/React.createElement(React.Fragment,null,subscribed===false&&/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"div\",{className:\"field is-grouped\"},/*#__PURE__*/React.createElement(\"div\",{className:\"control is-expanded\"},/*#__PURE__*/React.createElement(\"input\",{className:\"input is-\".concat(props.size),name:\"email\",type:\"email\",placeholder:props.inputPlaceholder,ref:register({required:\"Please enter an email address\"})})),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(SectionButton,{parentColor:props.parentColor,size:props.size,type:\"submit\"},props.buttonText))),errors.email&&/*#__PURE__*/React.createElement(\"p\",{className:\"help is-danger has-text-left\"},errors.email.message)),subscribed===true&&/*#__PURE__*/React.createElement(\"div\",null,props.subscribedMessage));}export default Newsletter;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/Newsletter.js"],"names":["React","useState","SectionButton","newsletter","useForm","Newsletter","props","subscribed","setSubscribed","handleSubmit","register","errors","onSubmit","email","onSubscribed","subscribe","size","inputPlaceholder","required","parentColor","buttonText","message","subscribedMessage"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eACWL,QAAQ,CAAC,KAAD,CADnB,wCAClBM,UADkB,eACNC,aADM,4BAEkBJ,OAAO,EAFzB,CAEjBK,YAFiB,UAEjBA,YAFiB,CAEHC,QAFG,UAEHA,QAFG,CAEOC,MAFP,UAEOA,MAFP,CAIzB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC9BL,aAAa,CAAC,IAAD,CAAb,CACA;AACA;AACAF,KAAK,CAACQ,YAAN,EAAsBR,KAAK,CAACQ,YAAN,EAAtB,CACA;AACAX,UAAU,CAACY,SAAX,CAAqB,CAAEF,KAAK,CAALA,KAAF,CAArB,EACD,CAPD,CASA,mBACE,wCACGN,UAAU,GAAK,KAAf,eACC,4BAAM,QAAQ,CAAEE,YAAY,CAACG,QAAD,CAA5B,eACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,qBAAf,eACE,6BACE,SAAS,oBAAcN,KAAK,CAACU,IAApB,CADX,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,OAHP,CAIE,WAAW,CAAEV,KAAK,CAACW,gBAJrB,CAKE,GAAG,CAAEP,QAAQ,CAAC,CACZQ,QAAQ,CAAE,+BADE,CAAD,CALf,EADF,CADF,cAYE,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,aAAD,EACE,WAAW,CAAEZ,KAAK,CAACa,WADrB,CAEE,IAAI,CAAEb,KAAK,CAACU,IAFd,CAGE,IAAI,CAAC,QAHP,EAKGV,KAAK,CAACc,UALT,CADF,CAZF,CADF,CAwBGT,MAAM,CAACE,KAAP,eACC,yBAAG,SAAS,CAAC,8BAAb,EACGF,MAAM,CAACE,KAAP,CAAaQ,OADhB,CAzBJ,CAFJ,CAkCGd,UAAU,GAAK,IAAf,eAAuB,+BAAMD,KAAK,CAACgB,iBAAZ,CAlC1B,CADF,CAsCD,CAED,cAAejB,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SectionButton from \"./SectionButton\";\nimport newsletter from \"./../util/newsletter.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = ({ email }) => {\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({ email });\n  };\n\n  return (\n    <>\n      {subscribed === false && (\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"field is-grouped\">\n            <div className=\"control is-expanded\">\n              <input\n                className={`input is-${props.size}`}\n                name=\"email\"\n                type=\"email\"\n                placeholder={props.inputPlaceholder}\n                ref={register({\n                  required: \"Please enter an email address\",\n                })}\n              />\n            </div>\n            <div className=\"control\">\n              <SectionButton\n                parentColor={props.parentColor}\n                size={props.size}\n                type=\"submit\"\n              >\n                {props.buttonText}\n              </SectionButton>\n            </div>\n          </div>\n\n          {errors.email && (\n            <p className=\"help is-danger has-text-left\">\n              {errors.email.message}\n            </p>\n          )}\n        </form>\n      )}\n\n      {subscribed === true && <div>{props.subscribedMessage}</div>}\n    </>\n  );\n}\n\nexport default Newsletter;\n"]},"metadata":{},"sourceType":"module"}