{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/AuthSocial.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./AuthSocial.scss\";\n\nfunction AuthSocial(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(null);\n  const [lastUsed, setLastUsed] = useState(null);\n  const providerDisplayNames = {\n    google: \"Google\",\n    facebook: \"Facebook\",\n    twitter: \"Twitter\",\n    github: \"GitHub\"\n  };\n\n  const onSigninWithProvider = provider => {\n    setPending(provider);\n    auth.signinWithProvider(provider).then(user => {\n      // Remember this provider was last used\n      // so we can indicate for next login.\n      localStorage.setItem(\"lastUsedAuthProvider\", provider);\n      props.onAuth(user);\n    }).catch(error => {\n      props.onError(error.message);\n    }).finally(() => {\n      setPending(null);\n    });\n  }; // Get value of last used auth provider\n\n\n  useEffect(() => {\n    if (props.showLastUsed) {\n      const lastUsed = localStorage.getItem(\"lastUsedAuthProvider\");\n\n      if (lastUsed) {\n        setLastUsed(lastUsed);\n      }\n    }\n  }, [props.showLastUsed]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, props.providers.map(provider => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-medium is-fullwidth\" + (pending === provider ? \" is-loading\" : \"\"),\n    onClick: () => {\n      onSigninWithProvider(provider);\n    },\n    key: provider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AuthSocial__icon icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://uploads.divjoy.com/icon-${provider}.svg`,\n    alt: providerDisplayNames[provider],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, props.buttonText, \" with \", providerDisplayNames[provider]), provider === lastUsed && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"AuthSocial__tag tag is-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Last used\"))));\n}\n\nexport default AuthSocial;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/AuthSocial.js"],"names":["React","useEffect","useState","useAuth","AuthSocial","props","auth","pending","setPending","lastUsed","setLastUsed","providerDisplayNames","google","facebook","twitter","github","onSigninWithProvider","provider","signinWithProvider","then","user","localStorage","setItem","onAuth","catch","error","onError","message","finally","showLastUsed","getItem","providers","map","buttonText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,mBAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMS,oBAAoB,GAAG;AAC3BC,IAAAA,MAAM,EAAE,QADmB;AAE3BC,IAAAA,QAAQ,EAAE,UAFiB;AAG3BC,IAAAA,OAAO,EAAE,SAHkB;AAI3BC,IAAAA,MAAM,EAAE;AAJmB,GAA7B;;AAOA,QAAMC,oBAAoB,GAAIC,QAAD,IAAc;AACzCT,IAAAA,UAAU,CAACS,QAAD,CAAV;AACAX,IAAAA,IAAI,CACDY,kBADH,CACsBD,QADtB,EAEGE,IAFH,CAESC,IAAD,IAAU;AACd;AACA;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,sBAArB,EAA6CL,QAA7C;AACAZ,MAAAA,KAAK,CAACkB,MAAN,CAAaH,IAAb;AACD,KAPH,EAQGI,KARH,CAQUC,KAAD,IAAW;AAChBpB,MAAAA,KAAK,CAACqB,OAAN,CAAcD,KAAK,CAACE,OAApB;AACD,KAVH,EAWGC,OAXH,CAWW,MAAM;AACbpB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAbH;AAcD,GAhBD,CAZyB,CA8BzB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACwB,YAAV,EAAwB;AACtB,YAAMpB,QAAQ,GAAGY,YAAY,CAACS,OAAb,CAAqB,sBAArB,CAAjB;;AACA,UAAIrB,QAAJ,EAAc;AACZC,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD;AACF;AACF,GAPQ,EAON,CAACJ,KAAK,CAACwB,YAAP,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,KAAK,CAAC0B,SAAN,CAAgBC,GAAhB,CAAqBf,QAAD,iBACnB;AACE,IAAA,SAAS,EACP,mCACCV,OAAO,KAAKU,QAAZ,GAAuB,aAAvB,GAAuC,EADxC,CAFJ;AAKE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,oBAAoB,CAACC,QAAD,CAApB;AACD,KAPH;AAQE,IAAA,GAAG,EAAEA,QARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,mCAAkCA,QAAS,MADnD;AAEE,IAAA,GAAG,EAAEN,oBAAoB,CAACM,QAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAAC4B,UADT,YAC2BtB,oBAAoB,CAACM,QAAD,CAD/C,CAhBF,EAoBGA,QAAQ,KAAKR,QAAb,iBACC;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBJ,CADD,CADH,CADF;AA8BD;;AAED,eAAeL,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./AuthSocial.scss\";\n\nfunction AuthSocial(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(null);\n  const [lastUsed, setLastUsed] = useState(null);\n\n  const providerDisplayNames = {\n    google: \"Google\",\n    facebook: \"Facebook\",\n    twitter: \"Twitter\",\n    github: \"GitHub\",\n  };\n\n  const onSigninWithProvider = (provider) => {\n    setPending(provider);\n    auth\n      .signinWithProvider(provider)\n      .then((user) => {\n        // Remember this provider was last used\n        // so we can indicate for next login.\n        localStorage.setItem(\"lastUsedAuthProvider\", provider);\n        props.onAuth(user);\n      })\n      .catch((error) => {\n        props.onError(error.message);\n      })\n      .finally(() => {\n        setPending(null);\n      });\n  };\n\n  // Get value of last used auth provider\n  useEffect(() => {\n    if (props.showLastUsed) {\n      const lastUsed = localStorage.getItem(\"lastUsedAuthProvider\");\n      if (lastUsed) {\n        setLastUsed(lastUsed);\n      }\n    }\n  }, [props.showLastUsed]);\n\n  return (\n    <div className=\"buttons\">\n      {props.providers.map((provider) => (\n        <button\n          className={\n            \"button is-medium is-fullwidth\" +\n            (pending === provider ? \" is-loading\" : \"\")\n          }\n          onClick={() => {\n            onSigninWithProvider(provider);\n          }}\n          key={provider}\n        >\n          <div className=\"AuthSocial__icon icon\">\n            <img\n              src={`https://uploads.divjoy.com/icon-${provider}.svg`}\n              alt={providerDisplayNames[provider]}\n            />\n          </div>\n          <span>\n            {props.buttonText} with {providerDisplayNames[provider]}\n          </span>\n\n          {provider === lastUsed && (\n            <span className=\"AuthSocial__tag tag is-warning\">Last used</span>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default AuthSocial;\n"]},"metadata":{},"sourceType":"module"}