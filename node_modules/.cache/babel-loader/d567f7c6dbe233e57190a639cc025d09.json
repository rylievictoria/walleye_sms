{"ast":null,"code":"import { loadStripe } from \"@stripe/stripe-js\";\nimport { apiRequest } from \"./util\";\nimport { getStripePriceId } from \"./prices\";\nlet stripe; // Load the Stripe script\n\nloadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY, {\n  apiVersion: process.env.REACT_APP_STRIPE_API_VERSION\n}).then(stripeInstance => {\n  // Set stripe so all functions below have it in scope\n  stripe = stripeInstance;\n});\nexport async function redirectToCheckout(planId) {\n  console.log(planID); // Create a checkout session\n\n  const session = await apiRequest(\"stripe-create-checkout-session\", \"POST\", {\n    priceId: getStripePriceId(planId)\n  }); // Ensure if user clicks browser back button from checkout they go to /pricing\n  // instead of this page or they'll redirect right back to checkout.\n\n  window.history.replaceState({}, \"\", \"/pricing\"); // Redirect to checkout\n\n  return stripe.redirectToCheckout({\n    sessionId: session.id\n  });\n}\nexport async function redirectToBilling() {\n  // Create a billing session\n  const session = await apiRequest(\"stripe-create-billing-session\", \"POST\"); // Redirect to billing session url\n\n  window.location.href = session.url;\n}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/stripe.js"],"names":["loadStripe","apiRequest","getStripePriceId","stripe","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","apiVersion","REACT_APP_STRIPE_API_VERSION","then","stripeInstance","redirectToCheckout","planId","console","log","planID","session","priceId","window","history","replaceState","sessionId","id","redirectToBilling","location","href","url"],"mappings":"AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AAEA,IAAIC,MAAJ,C,CACA;;AACAH,UAAU,CAACI,OAAO,CAACC,GAAR,CAAYC,gCAAb,EAA+C;AACvDC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAD+B,CAA/C,CAAV,CAEGC,IAFH,CAESC,cAAD,IAAoB;AAC1B;AACAP,EAAAA,MAAM,GAAGO,cAAT;AACD,CALD;AAOA,OAAO,eAAeC,kBAAf,CAAkCC,MAAlC,EAA0C;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAD+C,CAE/C;;AACA,QAAMC,OAAO,GAAG,MAAMf,UAAU,CAAC,gCAAD,EAAmC,MAAnC,EAA2C;AACzEgB,IAAAA,OAAO,EAAEf,gBAAgB,CAACU,MAAD;AADgD,GAA3C,CAAhC,CAH+C,CAO/C;AACA;;AACAM,EAAAA,MAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,UAApC,EAT+C,CAW/C;;AACA,SAAOjB,MAAM,CAACQ,kBAAP,CAA0B;AAC/BU,IAAAA,SAAS,EAAEL,OAAO,CAACM;AADY,GAA1B,CAAP;AAGD;AAED,OAAO,eAAeC,iBAAf,GAAmC;AACxC;AACA,QAAMP,OAAO,GAAG,MAAMf,UAAU,CAAC,+BAAD,EAAkC,MAAlC,CAAhC,CAFwC,CAIxC;;AACAiB,EAAAA,MAAM,CAACM,QAAP,CAAgBC,IAAhB,GAAuBT,OAAO,CAACU,GAA/B;AACD","sourcesContent":["import { loadStripe } from \"@stripe/stripe-js\";\nimport { apiRequest } from \"./util\";\nimport { getStripePriceId } from \"./prices\";\n\nlet stripe;\n// Load the Stripe script\nloadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY, {\n  apiVersion: process.env.REACT_APP_STRIPE_API_VERSION,\n}).then((stripeInstance) => {\n  // Set stripe so all functions below have it in scope\n  stripe = stripeInstance;\n});\n\nexport async function redirectToCheckout(planId) {\n  console.log(planID);\n  // Create a checkout session\n  const session = await apiRequest(\"stripe-create-checkout-session\", \"POST\", {\n    priceId: getStripePriceId(planId),\n  });\n\n  // Ensure if user clicks browser back button from checkout they go to /pricing\n  // instead of this page or they'll redirect right back to checkout.\n  window.history.replaceState({}, \"\", \"/pricing\");\n\n  // Redirect to checkout\n  return stripe.redirectToCheckout({\n    sessionId: session.id,\n  });\n}\n\nexport async function redirectToBilling() {\n  // Create a billing session\n  const session = await apiRequest(\"stripe-create-billing-session\", \"POST\");\n\n  // Redirect to billing session url\n  window.location.href = session.url;\n}\n"]},"metadata":{},"sourceType":"module"}