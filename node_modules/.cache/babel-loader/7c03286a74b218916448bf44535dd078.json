{"ast":null,"code":"import { apiRequest } from \"./util\";\nimport { useAuth } from \"./../util/auth.js\";\nexport async function sendSms(number, message) {\n  // Create a twilio session\n  console.log(number);\n  return await apiRequest(\"twilio-send-sms\", \"POST\", {\n    to: String(number),\n    // Need someway to enforce number format\n    message: message\n  });\n}\nexport function batchSms(numbers, message) {\n  const auth = useAuth();\n  let requests = []; // Text request\n\n  const requestSms = numbers.forEach(async num => {\n    await sendSms(num, message).then(status => {\n      messages.push({\n        to: status.to,\n        from: status.from,\n        body: status.body,\n        dateSent: status.dateSent,\n        errorMessage: status.errorMessage,\n        price: status.price\n      });\n      console.log(status);\n    }).catch(error => {\n      alert(error.message);\n    });\n  });\n  Promise.all(requests).then(() => {\n    messages = auth.user.messages ? [...messages, ...auth.user.messages] : messages;\n    auth.updateProfile({\n      messages: messages\n    });\n    console.log('messages');\n    console.log(auth.user.messages);\n  });\n}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/twilio.js"],"names":["apiRequest","useAuth","sendSms","number","message","console","log","to","String","batchSms","numbers","auth","requests","requestSms","forEach","num","then","status","messages","push","from","body","dateSent","errorMessage","price","catch","error","alert","Promise","all","user","updateProfile"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,eAAeC,OAAf,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AAC3C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAO,MAAMH,UAAU,CAAC,iBAAD,EAAoB,MAApB,EAA4B;AAC/CO,IAAAA,EAAE,EAAEC,MAAM,CAACL,MAAD,CADqC;AAC1B;AACrBC,IAAAA,OAAO,EAAEA;AAFsC,GAA5B,CAAvB;AAIH;AAED,OAAO,SAASK,QAAT,CAAkBC,OAAlB,EAA2BN,OAA3B,EAAoC;AACvC,QAAMO,IAAI,GAAGV,OAAO,EAApB;AACA,MAAIW,QAAQ,GAAG,EAAf,CAFuC,CAIvC;;AACA,QAAMC,UAAU,GAAGH,OAAO,CAACI,OAAR,CAAgB,MAAOC,GAAP,IAAe;AAC9C,UAAMb,OAAO,CAACa,GAAD,EAAMX,OAAN,CAAP,CACLY,IADK,CACCC,MAAD,IAAY;AACdC,MAAAA,QAAQ,CAACC,IAAT,CAAc;AACVZ,QAAAA,EAAE,EAAEU,MAAM,CAACV,EADD;AAEVa,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFH;AAGVC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAHH;AAIVC,QAAAA,QAAQ,EAAEL,MAAM,CAACK,QAJP;AAKVC,QAAAA,YAAY,EAAEN,MAAM,CAACM,YALX;AAMVC,QAAAA,KAAK,EAAEP,MAAM,CAACO;AANJ,OAAd;AAQAnB,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACH,KAXK,EAYLQ,KAZK,CAYEC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAACD,KAAK,CAACtB,OAAP,CAAL;AACH,KAdK,CAAN;AAeH,GAhBkB,CAAnB;AAiBAwB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ,EAAsBI,IAAtB,CAA2B,MAAM;AAC7BE,IAAAA,QAAQ,GAAGP,IAAI,CAACmB,IAAL,CAAUZ,QAAV,GAAqB,CAAC,GAAGA,QAAJ,EAAc,GAAGP,IAAI,CAACmB,IAAL,CAAUZ,QAA3B,CAArB,GAA4DA,QAAvE;AACAP,IAAAA,IAAI,CAACoB,aAAL,CAAmB;AAACb,MAAAA,QAAQ,EAAEA;AAAX,KAAnB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACmB,IAAL,CAAUZ,QAAtB;AACH,GALD;AAMH","sourcesContent":["import { apiRequest } from \"./util\";\nimport { useAuth } from \"./../util/auth.js\";\n\nexport async function sendSms(number, message) {\n    // Create a twilio session\n    console.log(number);\n    return await apiRequest(\"twilio-send-sms\", \"POST\", {\n        to: String(number),  // Need someway to enforce number format\n        message: message\n    });\n}\n\nexport function batchSms(numbers, message) {\n    const auth = useAuth();\n    let requests = [];\n\n    // Text request\n    const requestSms = numbers.forEach(async (num) => {\n        await sendSms(num, message)\n        .then((status) => {\n            messages.push({\n                to: status.to,\n                from: status.from,\n                body: status.body,\n                dateSent: status.dateSent,\n                errorMessage: status.errorMessage,\n                price: status.price\n            });\n            console.log(status);\n        })\n        .catch((error) => {\n            alert(error.message);\n        });\n    });\n    Promise.all(requests).then(() => {\n        messages = auth.user.messages ? [...messages, ...auth.user.messages] : messages;\n        auth.updateProfile({messages: messages});\n        console.log('messages');\n        console.log(auth.user.messages);\n    });\n}"]},"metadata":{},"sourceType":"module"}