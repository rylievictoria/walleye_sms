{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/SettingsPassword.js\";\nimport React, { useState } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction SettingsPassword(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    getValues\n  } = useForm();\n\n  const onSubmit = data => {\n    // Show pending indicator\n    setPending(true);\n    auth.updatePassword(data.pass).then(() => {\n      // Clear form\n      reset(); // Set success status\n\n      props.onStatus({\n        type: \"success\",\n        message: \"Your password has been updated\"\n      });\n    }).catch(error => {\n      if (error.code === \"auth/requires-recent-login\") {\n        // Update state to show re-authentication modal\n        props.onStatus({\n          type: \"requires-recent-login\",\n          // Resubmit after reauth flow\n          callback: () => onSubmit({\n            pass: data.pass\n          })\n        });\n      } else {\n        // Set error status\n        props.onStatus({\n          type: \"error\",\n          message: error.message\n        });\n      }\n    }).finally(() => {\n      // Hide pending indicator\n      setPending(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    name: \"pass\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    error: errors.pass,\n    inputRef: register({\n      required: \"Please enter a password\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    name: \"confirmpass\",\n    type: \"password\",\n    label: \"Confirm New Password\",\n    placeholder: \"Confirm Password\",\n    error: errors.confirmPass,\n    inputRef: register({\n      required: \"Please enter your new password again\",\n      validate: value => {\n        if (value === getValues().pass) {\n          return true;\n        } else {\n          return \"This doesn't match your password\";\n        }\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionButton, {\n    parentColor: props.parentColor,\n    size: \"medium\",\n    state: pending ? \"loading\" : \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}\n\nexport default SettingsPassword;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/SettingsPassword.js"],"names":["React","useState","FormField","SectionButton","useAuth","useForm","SettingsPassword","props","auth","pending","setPending","register","handleSubmit","errors","reset","getValues","onSubmit","data","updatePassword","pass","then","onStatus","type","message","catch","error","code","callback","finally","required","confirmPass","validate","value","parentColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction SettingsPassword(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n\n  const { register, handleSubmit, errors, reset, getValues } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    auth\n      .updatePassword(data.pass)\n      .then(() => {\n        // Clear form\n        reset();\n        // Set success status\n        props.onStatus({\n          type: \"success\",\n          message: \"Your password has been updated\",\n        });\n      })\n      .catch((error) => {\n        if (error.code === \"auth/requires-recent-login\") {\n          // Update state to show re-authentication modal\n          props.onStatus({\n            type: \"requires-recent-login\",\n            // Resubmit after reauth flow\n            callback: () => onSubmit({ pass: data.pass }),\n          });\n        } else {\n          // Set error status\n          props.onStatus({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormField\n        name=\"pass\"\n        type=\"password\"\n        label=\"Password\"\n        placeholder=\"Password\"\n        error={errors.pass}\n        inputRef={register({\n          required: \"Please enter a password\",\n        })}\n      />\n      <FormField\n        name=\"confirmpass\"\n        type=\"password\"\n        label=\"Confirm New Password\"\n        placeholder=\"Confirm Password\"\n        error={errors.confirmPass}\n        inputRef={register({\n          required: \"Please enter your new password again\",\n          validate: (value) => {\n            if (value === getValues().pass) {\n              return true;\n            } else {\n              return \"This doesn't match your password\";\n            }\n          },\n        })}\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <SectionButton\n            parentColor={props.parentColor}\n            size=\"medium\"\n            state={pending ? \"loading\" : \"normal\"}\n          >\n            Save\n          </SectionButton>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SettingsPassword;\n"]},"metadata":{},"sourceType":"module"}