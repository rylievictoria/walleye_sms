{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/DashboardDeliveries.js\";\nimport React from \"react\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useTable } from 'react-table';\nexport default function DashboardDeliveries(props) {\n  const auth = useAuth();\n  let data = [];\n  let columns = [];\n  let count = 0;\n  auth.user.deliveries.forEach(d => {\n    data.push(d);\n\n    if (count === 0) {\n      Object.entries(d).map(([k, v]) => {\n        console.log(k);\n        console.log(v);\n      });\n    }\n\n    count++;\n  });\n  data = React.useMemo(() => data, []);\n  console.log(auth.user.deliveries[0]);\n  columns = React.useMemo(() => columns, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // let data = auth.user.deliveries;\n  // let columns = data[0].keys();\n  // const table\n  // return(\n  //     <div>\n  //         {items && items.map(i => <p>{String(Object.entries(i))}</p>)}\n  //     </div>\n  // );\n\n  return /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    style: {\n      border: 'solid 1px blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    style: {\n      borderBottom: 'solid 3px red',\n      background: 'aliceblue',\n      color: 'black',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }), column.render('Header')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), rows.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        style: {\n          padding: '10px',\n          border: 'solid 1px gray',\n          background: 'papayawhip'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 23\n        }\n      }), cell.render('Cell'));\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/DashboardDeliveries.js"],"names":["React","useAuth","useTable","DashboardDeliveries","props","auth","data","columns","count","user","deliveries","forEach","d","push","Object","entries","map","k","v","console","log","useMemo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useTable } from 'react-table'\n\nexport default function DashboardDeliveries(props) {\n    const auth = useAuth();\n\n    let data = [];\n    let columns = [];\n    let count = 0;\n    auth.user.deliveries.forEach((d) => {\n        data.push(d);\n        if (count === 0) {\n            Object.entries(d).map(([k, v]) => {\n                console.log(k);\n                console.log(v);\n            });\n        }\n        count++;\n    })\n\n    data = React.useMemo(\n        () => data,\n        []\n    );\n    \n    console.log(auth.user.deliveries[0]);\n    columns = React.useMemo(\n        () => columns,\n        []\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data });\n\n    // let data = auth.user.deliveries;\n    // let columns = data[0].keys();\n\n    // const table\n\n    // return(\n    //     <div>\n    //         {items && items.map(i => <p>{String(Object.entries(i))}</p>)}\n    //     </div>\n    // );\n\n    return (\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th\n                    {...column.getHeaderProps()}\n                    style={{\n                      borderBottom: 'solid 3px red',\n                      background: 'aliceblue',\n                      color: 'black',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: '10px',\n                          border: 'solid 1px gray',\n                          background: 'papayawhip',\n                        }}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      );\n}"]},"metadata":{},"sourceType":"module"}