{"ast":null,"code":"import _objectSpread from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/*\n  A wrapper around React Router that adds a useRouter() hook so that any component\n  can easily access params, location, history, and trigger navigation.\n  Import from this file instead of react-router-dom directly.\n*/import React,{useMemo,useEffect}from\"react\";import{Router as RouterOriginal,useParams,useLocation,useHistory,useRouteMatch}from\"react-router-dom\";import queryString from\"query-string\";// Use a custom history object and pass to Router so that we\n// can utilize history.listen() where needed (such as for pageview tracking)\nimport{createBrowserHistory}from\"history\";export var history=createBrowserHistory();// Export our <Router> component\n// Includes custom history object and component for auto-scrolling to top\nexport function Router(_ref){var children=_ref.children;return/*#__PURE__*/React.createElement(RouterOriginal,{history:history},/*#__PURE__*/React.createElement(ScrollToTop,null),children);}// Custom useRouter hook for getting route data and methods inside any component.\n// NOTE: This hook includes all React Router hooks, which can result in extra re-renders\n// in some cases. When needed, you can optimize performance by importing the specific hook\n// you need (such as useParams or useLocation) instead of this custom useRouter hook.\nexport function useRouter(){var params=useParams();var location=useLocation();var history=useHistory();var match=useRouteMatch();// Return our custom router object\n// Memoize so that a new object is only returned if something changes\nreturn useMemo(function(){return{// For convenience add push(), replace(), pathname at top level\npush:history.push,replace:history.replace,pathname:location.pathname,// Merge params and parsed query string into single \"query\" object\n// so that they can be used interchangeably.\n// Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\nquery:_objectSpread(_objectSpread({},queryString.parse(location.search)),params),// Include match, location, history objects so we have\n// access to extra React Router functionality if needed.\nmatch:match,location:location,history:history};},[params,match,location,history]);}// Remove or customize if you need more advanced scroll behavior\n// and don't want to always scroll to top when location.pathname changes.\nfunction ScrollToTop(){var location=useLocation();useEffect(function(){window.scrollTo(0,0);},[location.pathname]);return null;}export{Route,Switch,Link,NavLink,useParams,useLocation,useHistory,useRouteMatch}from\"react-router-dom\";","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/router.js"],"names":["React","useMemo","useEffect","Router","RouterOriginal","useParams","useLocation","useHistory","useRouteMatch","queryString","createBrowserHistory","history","children","useRouter","params","location","match","push","replace","pathname","query","parse","search","ScrollToTop","window","scrollTo","Route","Switch","Link","NavLink"],"mappings":"iJAAA;AACA;AACA;AACA;AACA,EAEA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,OACEC,MAAM,GAAIC,CAAAA,cADZ,CAEEC,SAFF,CAGEC,WAHF,CAIEC,UAJF,CAKEC,aALF,KAMO,kBANP,CAOA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA;AACA;AACA,OAASC,oBAAT,KAAqC,SAArC,CACA,MAAO,IAAMC,CAAAA,OAAO,CAAGD,oBAAoB,EAApC,CAEP;AACA;AACA,MAAO,SAASP,CAAAA,MAAT,MAA8B,IAAZS,CAAAA,QAAY,MAAZA,QAAY,CACnC,mBACE,oBAAC,cAAD,EAAgB,OAAO,CAAED,OAAzB,eACE,oBAAC,WAAD,MADF,CAEGC,QAFH,CADF,CAMD,CAED;AACA;AACA;AACA;AACA,MAAO,SAASC,CAAAA,SAAT,EAAqB,CAC1B,GAAMC,CAAAA,MAAM,CAAGT,SAAS,EAAxB,CACA,GAAMU,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMK,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CACA,GAAMS,CAAAA,KAAK,CAAGR,aAAa,EAA3B,CAEA;AACA;AACA,MAAOP,CAAAA,OAAO,CAAC,UAAM,CACnB,MAAO,CACL;AACAgB,IAAI,CAAEN,OAAO,CAACM,IAFT,CAGLC,OAAO,CAAEP,OAAO,CAACO,OAHZ,CAILC,QAAQ,CAAEJ,QAAQ,CAACI,QAJd,CAKL;AACA;AACA;AACAC,KAAK,gCACAX,WAAW,CAACY,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CADA,EAEAR,MAFA,CARA,CAYL;AACA;AACAE,KAAK,CAALA,KAdK,CAeLD,QAAQ,CAARA,QAfK,CAgBLJ,OAAO,CAAPA,OAhBK,CAAP,CAkBD,CAnBa,CAmBX,CAACG,MAAD,CAASE,KAAT,CAAgBD,QAAhB,CAA0BJ,OAA1B,CAnBW,CAAd,CAoBD,CAED;AACA;AACA,QAASY,CAAAA,WAAT,EAAuB,CACrB,GAAMR,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACAJ,SAAS,CAAC,UAAM,CACdsB,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,CAFQ,CAEN,CAACV,QAAQ,CAACI,QAAV,CAFM,CAAT,CAGA,MAAO,KAAP,CACD,CAED,OACEO,KADF,CAEEC,MAFF,CAGEC,IAHF,CAIEC,OAJF,CAKExB,SALF,CAMEC,WANF,CAOEC,UAPF,CAQEC,aARF,KASO,kBATP","sourcesContent":["/*\n  A wrapper around React Router that adds a useRouter() hook so that any component\n  can easily access params, location, history, and trigger navigation.\n  Import from this file instead of react-router-dom directly.\n*/\n\nimport React, { useMemo, useEffect } from \"react\";\nimport {\n  Router as RouterOriginal,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport queryString from \"query-string\";\n\n// Use a custom history object and pass to Router so that we\n// can utilize history.listen() where needed (such as for pageview tracking)\nimport { createBrowserHistory } from \"history\";\nexport const history = createBrowserHistory();\n\n// Export our <Router> component\n// Includes custom history object and component for auto-scrolling to top\nexport function Router({ children }) {\n  return (\n    <RouterOriginal history={history}>\n      <ScrollToTop />\n      {children}\n    </RouterOriginal>\n  );\n}\n\n// Custom useRouter hook for getting route data and methods inside any component.\n// NOTE: This hook includes all React Router hooks, which can result in extra re-renders\n// in some cases. When needed, you can optimize performance by importing the specific hook\n// you need (such as useParams or useLocation) instead of this custom useRouter hook.\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n\n// Remove or customize if you need more advanced scroll behavior\n// and don't want to always scroll to top when location.pathname changes.\nfunction ScrollToTop() {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return null;\n}\n\nexport {\n  Route,\n  Switch,\n  Link,\n  NavLink,\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\n"]},"metadata":{},"sourceType":"module"}