{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/DashboardSms.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { useForm, reset } from \"react-hook-form\";\nimport { getResponses, filterNumbers } from \"./../util/sheets.js\";\nimport { sendSms } from \"./../util/twilio.js\";\n\nfunction DashboardSms(props) {\n  const auth = useAuth();\n  const router = useRouter();\n  const [pending, setPending] = useState(false);\n  const [phoneCol, setPhoneCol] = useState(\"Number\");\n  const [customers, setCustomers] = useState({\n    \"Name\": {\n      responses: [\"Rylie\", \"Jordan\"],\n      options: [\"Rylie\", \"Jordan\"]\n    },\n    \"Number\": {\n      responses: [\"+12624243872\", \"+6309010523\"],\n      options: [\"+2624243872\", \"+6309010523\"]\n    },\n    \"Pizza Topping\": {\n      responses: [\"Pepperoni\", [\"Cheese\", \"Sausage\"]],\n      options: [\"Pepperoni\", \"Cheese\", \"Sausage\"]\n    },\n    \"Favorite Color\": {\n      responses: [[\"Red\", \"Blue\"], \"Green\"],\n      options: [\"Red\", \"Blue\", \"Green\"]\n    }\n  });\n  const [formAlert, setFormAlert] = useState(null);\n  useEffect(() => {\n    if (auth.user.planIsActive && !auth.user.sheetLink) {\n      alert(\"You need to enter a sheet link first to not use default values!\");\n    } else if (auth.user.planIsActive && !auth.user.phoneCol) {\n      alert(\"You need to specify the phone number column first to not use default values!\");\n    } else if (!auth.user.planIsActive) {\n      alert(\"You need to sign up for a subscription not to use default values!\");\n    } else if (auth.user.planIsActive && auth.user.sheetLink && auth.user.phoneCol) {\n      setPending(true);\n      getResponses(auth.user.sheetLink).then(c => {\n        setCustomers(c);\n        setPhoneCol(auth.user.phoneCol);\n      }).catch(e => {\n        console.error('Error: ', e);\n      });\n      setPending(false);\n    } else {\n      // Alert that no subscription and should sign up\n      // Redirect to checkout?\n      console.log(auth.user);\n    }\n  }, [auth.user]);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    setPending(true);\n    const message = data.message;\n    const numbers = filterNumbers(data, customers, phoneCol);\n    const cost = numbers.length * 0.10;\n\n    if (!(auth.user.smsFunds > 0) || cost > auth.user.smsFunds) {\n      if (auth.user.planIsActive) {\n        alert(`You have ${auth.user.smsFunds} and this costs ${cost}! Refill your account.`);\n        router.push(`/purchase/sms?quantity=${numbers.length}`);\n      } else {\n        alert(\"You have no subscription! Please sign up.\");\n        router.push(`/pricing`);\n      }\n    }\n\n    console.log('Message: ' + message);\n    console.log('Numbers: ' + numbers);\n    numbers.forEach(num => {\n      sendSms(num, message).then(status => {\n        let delivery = {\n          to: status.to,\n          from: status.from,\n          body: status.body,\n          dateSent: status.dateSent,\n          errorMessage: status.errorMessage,\n          price: status.price\n        };\n\n        if (auth.user.deliveries) {\n          delivery = [...auth.user.deliveries, delivery];\n        }\n\n        auth.updateProfile({\n          smsFunds: auth.user.smsFunds - 0.10,\n          deliveries: delivery\n        });\n      }).catch(error => {\n        alert(error.message);\n      }).finally(() => {\n        console.log('SMS Funds left: ' + auth.user.smsFunds);\n      });\n    }); // Reset filters and what not\n\n    reset();\n    setPending(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, !pending && Object.entries(customers).map(([q, values]) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, q), values.options.map(a => /*#__PURE__*/React.createElement(FormField, {\n    id: a,\n    name: q + \"|||\" + a,\n    type: \"checkbox\",\n    inputRef: register(),\n    error: errors.q,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    name: \"message\",\n    type: \"textarea\",\n    label: \"Please enter your SMS\",\n    placeholder: \"Write to your people\",\n    error: errors.message,\n    inputRef: register({\n      required: \"Please enter your text message to send!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SectionButton, {\n    parentColor: props.parentColor,\n    size: \"medium\",\n    state: pending ? \"loading\" : \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Send\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, auth.user.deliveries && Object.entries(auth.user.deliveries).map(d => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 82\n    }\n  }, String(d)))));\n}\n\nexport default DashboardSms;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/DashboardSms.js"],"names":["React","useState","useEffect","FormField","SectionButton","useAuth","useRouter","useForm","reset","getResponses","filterNumbers","sendSms","DashboardSms","props","auth","router","pending","setPending","phoneCol","setPhoneCol","customers","setCustomers","responses","options","formAlert","setFormAlert","user","planIsActive","sheetLink","alert","then","c","catch","e","console","error","log","register","handleSubmit","errors","onSubmit","data","message","numbers","cost","length","smsFunds","push","forEach","num","status","delivery","to","from","body","dateSent","errorMessage","price","deliveries","updateProfile","finally","Object","entries","map","q","values","a","required","parentColor","d","String"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormField from \"./FormField\";\nimport SectionButton from \"./SectionButton\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useRouter } from \"./../util/router.js\";\nimport { useForm, reset } from \"react-hook-form\";\nimport { getResponses, filterNumbers } from \"./../util/sheets.js\";\nimport { sendSms } from \"./../util/twilio.js\";\n\nfunction DashboardSms(props) {\n  const auth = useAuth();\n  const router = useRouter();\n  const [pending, setPending] = useState(false);\n  const [phoneCol, setPhoneCol] = useState(\"Number\");\n  const [customers, setCustomers] = useState({\n    \"Name\": {responses: [\"Rylie\", \"Jordan\"], options: [\"Rylie\", \"Jordan\"]},\n    \"Number\": {responses: [\"+12624243872\", \"+6309010523\"], options: [\"+2624243872\", \"+6309010523\"]},\n    \"Pizza Topping\": {responses: [\"Pepperoni\", [\"Cheese\", \"Sausage\"]], options: [\"Pepperoni\", \"Cheese\", \"Sausage\"]},\n    \"Favorite Color\": {responses: [[\"Red\", \"Blue\"], \"Green\"], options: [\"Red\", \"Blue\", \"Green\"]}\n  });\n  const [formAlert, setFormAlert] = useState(null);\n\n  useEffect(() => {\n      if (auth.user.planIsActive && !auth.user.sheetLink) {\n        alert(\"You need to enter a sheet link first to not use default values!\");\n      } else if (auth.user.planIsActive && !auth.user.phoneCol) {\n        alert(\"You need to specify the phone number column first to not use default values!\");\n      } else if (!auth.user.planIsActive) {\n        alert(\"You need to sign up for a subscription not to use default values!\");\n      } else if (auth.user.planIsActive && auth.user.sheetLink && auth.user.phoneCol) {\n        setPending(true);\n        getResponses(auth.user.sheetLink)\n        .then((c) => {\n          setCustomers(c);\n          setPhoneCol(auth.user.phoneCol);\n        })\n        .catch((e) => {\n          console.error('Error: ', e);\n        });\n        setPending(false);\n      }\n      else {\n        // Alert that no subscription and should sign up\n        // Redirect to checkout?\n        console.log(auth.user);\n      }\n    }, [auth.user]);\n\n  const { register, handleSubmit, errors, reset } = useForm();\n\n  const onSubmit = (data) => {\n    setPending(true);\n\n    const message = data.message;\n    const numbers = filterNumbers(data, customers, phoneCol);\n    const cost = numbers.length * 0.10;\n  \n    if (!(auth.user.smsFunds > 0) || cost > auth.user.smsFunds) {\n      if (auth.user.planIsActive) {\n        alert(`You have ${auth.user.smsFunds} and this costs ${cost}! Refill your account.`)\n        router.push(`/purchase/sms?quantity=${numbers.length}`);\n      } else {\n        alert(\"You have no subscription! Please sign up.\")\n        router.push(`/pricing`);\n      }\n    }\n\n    console.log('Message: '+message);\n    console.log('Numbers: '+numbers);\n\n    numbers.forEach((num) => {\n      sendSms(num, message)\n      .then((status) => {\n          let delivery = {\n            to: status.to,\n            from: status.from,\n            body: status.body,\n            dateSent: status.dateSent,\n            errorMessage: status.errorMessage,\n            price: status.price\n          }\n          if (auth.user.deliveries) {\n            delivery = [...auth.user.deliveries, delivery];\n          }\n          auth.updateProfile({\n            smsFunds: auth.user.smsFunds - 0.10,\n            deliveries: delivery\n          });\n      })\n      .catch((error) => {\n          alert(error.message);\n      })\n      .finally(() => {\n        console.log('SMS Funds left: '+auth.user.smsFunds);\n      });\n    });\n\n    // Reset filters and what not\n    reset();\n    setPending(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {!pending && Object.entries(customers).map(([q, values]) => (\n          <div>\n              <h3 className=\"is-primary\">{q}</h3>\n              {values.options.map((a) => (\n                  <FormField\n                      id={a}\n                      name={q+\"|||\"+a}\n                      type=\"checkbox\"\n                      inputRef={register()}\n                      error={errors.q}\n                  />)\n              )}\n              <br />\n          </div>\n        )\n      )}\n      <FormField\n        name=\"message\"\n        type=\"textarea\"\n        label=\"Please enter your SMS\"\n        placeholder=\"Write to your people\"\n        error={errors.message}\n        inputRef={register({\n          required: \"Please enter your text message to send!\",\n        })}\n      />\n      <div className=\"field\">\n        <div className=\"control\">\n          <SectionButton\n            parentColor={props.parentColor}\n            size=\"medium\"\n            state={pending ? \"loading\" : \"normal\"}\n          >\n            Send\n          </SectionButton>\n        </div>\n      </div>\n      <div>\n        {auth.user.deliveries && Object.entries(auth.user.deliveries).map((d) => <p>{String(d)}</p>)}\n      </div>\n    </form>\n  );\n}\n\nexport default DashboardSms;\n"]},"metadata":{},"sourceType":"module"}