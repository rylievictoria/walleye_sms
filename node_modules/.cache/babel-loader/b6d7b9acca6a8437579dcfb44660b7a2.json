{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{loadStripe}from\"@stripe/stripe-js\";import{apiRequest}from\"./util\";import{getStripePriceId}from\"./prices\";var stripe;// Load the Stripe script\nloadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY,{apiVersion:process.env.REACT_APP_STRIPE_API_VERSION}).then(function(stripeInstance){// Set stripe so all functions below have it in scope\nstripe=stripeInstance;});export function redirectToCheckout(_x,_x2){return _redirectToCheckout.apply(this,arguments);}function _redirectToCheckout(){_redirectToCheckout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(planId,quantity){var session;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return apiRequest(\"stripe-create-checkout-session\",\"POST\",{priceId:getStripePriceId(planId),quantity:quantity});case 2:session=_context.sent;// Ensure if user clicks browser back button from checkout they go to /pricing\n// instead of this page or they'll redirect right back to checkout.\nwindow.history.replaceState({},\"\",\"/pricing\");// Redirect to checkout\nconsole.log(session);return _context.abrupt(\"return\",stripe.redirectToCheckout({sessionId:session.id}));case 6:case\"end\":return _context.stop();}}},_callee);}));return _redirectToCheckout.apply(this,arguments);}export function redirectToBilling(){return _redirectToBilling.apply(this,arguments);}function _redirectToBilling(){_redirectToBilling=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var session;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return apiRequest(\"stripe-create-billing-session\",\"POST\");case 2:session=_context2.sent;// Redirect to billing session url\nwindow.location.href=session.url;case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _redirectToBilling.apply(this,arguments);}","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/util/stripe.js"],"names":["loadStripe","apiRequest","getStripePriceId","stripe","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","apiVersion","REACT_APP_STRIPE_API_VERSION","then","stripeInstance","redirectToCheckout","planId","quantity","priceId","session","window","history","replaceState","console","log","sessionId","id","redirectToBilling","location","href","url"],"mappings":"iSAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,OAASC,gBAAT,KAAiC,UAAjC,CAEA,GAAIC,CAAAA,MAAJ,CACA;AACAH,UAAU,CAACI,OAAO,CAACC,GAAR,CAAYC,gCAAb,CAA+C,CACvDC,UAAU,CAAEH,OAAO,CAACC,GAAR,CAAYG,4BAD+B,CAA/C,CAAV,CAEGC,IAFH,CAEQ,SAACC,cAAD,CAAoB,CAC1B;AACAP,MAAM,CAAGO,cAAT,CACD,CALD,EAOA,eAAsBC,CAAAA,kBAAtB,2D,2GAAO,iBAAkCC,MAAlC,CAA0CC,QAA1C,oJAEiBZ,CAAAA,UAAU,CAAC,gCAAD,CAAmC,MAAnC,CAA2C,CACzEa,OAAO,CAAEZ,gBAAgB,CAACU,MAAD,CADgD,CAEzEC,QAAQ,CAAEA,QAF+D,CAA3C,CAF3B,QAECE,OAFD,eAOL;AACA;AACAC,MAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,CAAgC,EAAhC,CAAoC,UAApC,EAEA;AACAC,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAZK,gCAcEZ,MAAM,CAACQ,kBAAP,CAA0B,CAC/BU,SAAS,CAAEN,OAAO,CAACO,EADY,CAA1B,CAdF,wD,qDAmBP,eAAsBC,CAAAA,iBAAtB,oD,yGAAO,2KAEiBtB,CAAAA,UAAU,CAAC,+BAAD,CAAkC,MAAlC,CAF3B,QAECc,OAFD,gBAIL;AACAC,MAAM,CAACQ,QAAP,CAAgBC,IAAhB,CAAuBV,OAAO,CAACW,GAA/B,CALK,wD","sourcesContent":["import { loadStripe } from \"@stripe/stripe-js\";\nimport { apiRequest } from \"./util\";\nimport { getStripePriceId } from \"./prices\";\n\nlet stripe;\n// Load the Stripe script\nloadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY, {\n  apiVersion: process.env.REACT_APP_STRIPE_API_VERSION,\n}).then((stripeInstance) => {\n  // Set stripe so all functions below have it in scope\n  stripe = stripeInstance;\n});\n\nexport async function redirectToCheckout(planId, quantity) {\n  // Create a checkout session\n  const session = await apiRequest(\"stripe-create-checkout-session\", \"POST\", {\n    priceId: getStripePriceId(planId),\n    quantity: quantity\n  });\n\n  // Ensure if user clicks browser back button from checkout they go to /pricing\n  // instead of this page or they'll redirect right back to checkout.\n  window.history.replaceState({}, \"\", \"/pricing\");\n\n  // Redirect to checkout\n  console.log(session);\n\n  return stripe.redirectToCheckout({\n    sessionId: session.id,\n  });\n}\n\nexport async function redirectToBilling() {\n  // Create a billing session\n  const session = await apiRequest(\"stripe-create-billing-session\", \"POST\");\n\n  // Redirect to billing session url\n  window.location.href = session.url;\n}\n"]},"metadata":{},"sourceType":"module"}