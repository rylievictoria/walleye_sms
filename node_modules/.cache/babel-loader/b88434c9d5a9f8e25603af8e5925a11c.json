{"ast":null,"code":"var _jsxFileName = \"/Users/rhendren/walleye_sms/src/components/SettingsSection.js\";\nimport React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport SettingsNav from \"./SettingsNav\";\nimport FormAlert from \"./FormAlert\";\nimport SettingsGeneral from \"./SettingsGeneral\";\nimport SettingsPassword from \"./SettingsPassword\";\nimport SettingsBilling from \"./SettingsBilling\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./SettingsSection.scss\";\n\nfunction SettingsSection(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null); // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n\n  const [reauthState, setReauthState] = useState({\n    show: false\n  });\n  const validSections = {\n    general: true,\n    password: true,\n    billing: true\n  };\n  const section = validSections[props.section] ? props.section : \"general\"; // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n\n  const handleStatus = ({\n    type,\n    message,\n    callback\n  }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null); // Then update state to show re-authentication modal\n\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Section, {\n    color: props.color,\n    size: props.size,\n    backgroundImage: props.backgroundImage,\n    backgroundImageOpacity: props.backgroundImageOpacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, reauthState.show && /*#__PURE__*/React.createElement(ReauthModal, {\n    callback: reauthState.callback,\n    provider: auth.user.providers[0],\n    onDone: () => setReauthState({\n      show: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SettingsNav, {\n    activeKey: section,\n    parentColor: props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SettingsSection__container container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, formAlert && /*#__PURE__*/React.createElement(FormAlert, {\n    type: formAlert.type,\n    message: formAlert.message,\n    style: {\n      maxWidth: \"450px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), section === \"general\" && /*#__PURE__*/React.createElement(SettingsGeneral, {\n    parentColor: props.color,\n    onStatus: handleStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), section === \"password\" && /*#__PURE__*/React.createElement(SettingsPassword, {\n    parentColor: props.color,\n    onStatus: handleStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), section === \"billing\" && /*#__PURE__*/React.createElement(SettingsBilling, {\n    parentColor: props.color,\n    onStatus: handleStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default SettingsSection;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/SettingsSection.js"],"names":["React","useState","Section","ReauthModal","SettingsNav","FormAlert","SettingsGeneral","SettingsPassword","SettingsBilling","useAuth","SettingsSection","props","auth","formAlert","setFormAlert","reauthState","setReauthState","show","validSections","general","password","billing","section","handleStatus","type","message","callback","color","size","backgroundImage","backgroundImageOpacity","user","providers","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,wBAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C,CAF8B,CAI9B;AACA;;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAC7CgB,IAAAA,IAAI,EAAE;AADuC,GAAD,CAA9C;AAIA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,IADW;AAEpBC,IAAAA,QAAQ,EAAE,IAFU;AAGpBC,IAAAA,OAAO,EAAE;AAHW,GAAtB;AAMA,QAAMC,OAAO,GAAGJ,aAAa,CAACP,KAAK,CAACW,OAAP,CAAb,GAA+BX,KAAK,CAACW,OAArC,GAA+C,SAA/D,CAhB8B,CAkB9B;AACA;AACA;;AACA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAD,KAAiC;AACpD,QAAIF,IAAI,KAAK,uBAAb,EAAsC;AACpC;AACAV,MAAAA,YAAY,CAAC,IAAD,CAAZ,CAFoC,CAGpC;;AACAE,MAAAA,cAAc,CAAC;AACbC,QAAAA,IAAI,EAAE,IADO;AAEb;AACAS,QAAAA,QAAQ,EAAEA;AAHG,OAAD,CAAd;AAKD,KATD,MASO;AACL;AACAZ,MAAAA,YAAY,CAAC;AACXU,QAAAA,IAAI,EAAEA,IADK;AAEXC,QAAAA,OAAO,EAAEA;AAFE,OAAD,CAAZ;AAID;AACF,GAjBD;;AAmBA,sBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEd,KAAK,CAACgB,KADf;AAEE,IAAA,IAAI,EAAEhB,KAAK,CAACiB,IAFd;AAGE,IAAA,eAAe,EAAEjB,KAAK,CAACkB,eAHzB;AAIE,IAAA,sBAAsB,EAAElB,KAAK,CAACmB,sBAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGf,WAAW,CAACE,IAAZ,iBACC,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEF,WAAW,CAACW,QADxB;AAEE,IAAA,QAAQ,EAAEd,IAAI,CAACmB,IAAL,CAAUC,SAAV,CAAoB,CAApB,CAFZ;AAGE,IAAA,MAAM,EAAE,MAAMhB,cAAc,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAcE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEK,OAAxB;AAAiC,IAAA,WAAW,EAAEX,KAAK,CAACgB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,iBACR,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEA,SAAS,CAACW,IADlB;AAEE,IAAA,OAAO,EAAEX,SAAS,CAACY,OAFrB;AAGE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASGX,OAAO,KAAK,SAAZ,iBACC,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEX,KAAK,CAACgB,KAApC;AAA2C,IAAA,QAAQ,EAAEJ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAaGD,OAAO,KAAK,UAAZ,iBACC,oBAAC,gBAAD;AAAkB,IAAA,WAAW,EAAEX,KAAK,CAACgB,KAArC;AAA4C,IAAA,QAAQ,EAAEJ,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAiBGD,OAAO,KAAK,SAAZ,iBACC,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEX,KAAK,CAACgB,KAApC;AAA2C,IAAA,QAAQ,EAAEJ,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CAfF,CADF;AAuCD;;AAED,eAAeb,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport SettingsNav from \"./SettingsNav\";\nimport FormAlert from \"./FormAlert\";\nimport SettingsGeneral from \"./SettingsGeneral\";\nimport SettingsPassword from \"./SettingsPassword\";\nimport SettingsBilling from \"./SettingsBilling\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./SettingsSection.scss\";\n\nfunction SettingsSection(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null);\n\n  // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n  const [reauthState, setReauthState] = useState({\n    show: false,\n  });\n\n  const validSections = {\n    general: true,\n    password: true,\n    billing: true,\n  };\n\n  const section = validSections[props.section] ? props.section : \"general\";\n\n  // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n  const handleStatus = ({ type, message, callback }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null);\n      // Then update state to show re-authentication modal\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback,\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message,\n      });\n    }\n  };\n\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      {reauthState.show && (\n        <ReauthModal\n          callback={reauthState.callback}\n          provider={auth.user.providers[0]}\n          onDone={() => setReauthState({ show: false })}\n        />\n      )}\n\n      <SettingsNav activeKey={section} parentColor={props.color} />\n      <div className=\"SettingsSection__container container\">\n        {formAlert && (\n          <FormAlert\n            type={formAlert.type}\n            message={formAlert.message}\n            style={{ maxWidth: \"450px\" }}\n          />\n        )}\n\n        {section === \"general\" && (\n          <SettingsGeneral parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"password\" && (\n          <SettingsPassword parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"billing\" && (\n          <SettingsBilling parentColor={props.color} onStatus={handleStatus} />\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport default SettingsSection;\n"]},"metadata":{},"sourceType":"module"}