{"ast":null,"code":"import _slicedToArray from\"/Users/rhendren/walleye_sms/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Section from\"./Section\";import ReauthModal from\"./ReauthModal\";import SettingsNav from\"./SettingsNav\";import FormAlert from\"./FormAlert\";import SettingsGeneral from\"./SettingsGeneral\";import SettingsPassword from\"./SettingsPassword\";import SettingsBilling from\"./SettingsBilling\";import{useAuth}from\"./../util/auth.js\";import\"./SettingsSection.scss\";function SettingsSection(props){var auth=useAuth();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),formAlert=_useState2[0],setFormAlert=_useState2[1];// State to control whether we show a re-authentication flow\n// Required by some security sensitive actions, such as changing password.\nvar _useState3=useState({show:false}),_useState4=_slicedToArray(_useState3,2),reauthState=_useState4[0],setReauthState=_useState4[1];var validSections={general:true,password:true,billing:true};var section=validSections[props.section]?props.section:\"general\";// Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n// We don't treat \"requires-recent-login\" as an error as we handle it\n// gracefully by taking the user through a re-authentication flow.\nvar handleStatus=function handleStatus(_ref){var type=_ref.type,message=_ref.message,callback=_ref.callback;if(type===\"requires-recent-login\"){// First clear any existing message\nsetFormAlert(null);// Then update state to show re-authentication modal\nsetReauthState({show:true,// Failed action to try again after reauth\ncallback:callback});}else{// Display message to user (type is success or error)\nsetFormAlert({type:type,message:message});}};return/*#__PURE__*/React.createElement(Section,{color:props.color,size:props.size,backgroundImage:props.backgroundImage,backgroundImageOpacity:props.backgroundImageOpacity},reauthState.show&&/*#__PURE__*/React.createElement(ReauthModal,{callback:reauthState.callback,provider:auth.user.providers[0],onDone:function onDone(){return setReauthState({show:false});}}),/*#__PURE__*/React.createElement(SettingsNav,{activeKey:section,parentColor:props.color}),/*#__PURE__*/React.createElement(\"div\",{className:\"SettingsSection__container container\"},formAlert&&/*#__PURE__*/React.createElement(FormAlert,{type:formAlert.type,message:formAlert.message,style:{maxWidth:\"450px\"}}),section===\"general\"&&/*#__PURE__*/React.createElement(SettingsGeneral,{parentColor:props.color,onStatus:handleStatus}),section===\"password\"&&/*#__PURE__*/React.createElement(SettingsPassword,{parentColor:props.color,onStatus:handleStatus}),section===\"billing\"&&/*#__PURE__*/React.createElement(SettingsBilling,{parentColor:props.color,onStatus:handleStatus})));}export default SettingsSection;","map":{"version":3,"sources":["/Users/rhendren/walleye_sms/src/components/SettingsSection.js"],"names":["React","useState","Section","ReauthModal","SettingsNav","FormAlert","SettingsGeneral","SettingsPassword","SettingsBilling","useAuth","SettingsSection","props","auth","formAlert","setFormAlert","show","reauthState","setReauthState","validSections","general","password","billing","section","handleStatus","type","message","callback","color","size","backgroundImage","backgroundImageOpacity","user","providers","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Section from \"./Section\";\nimport ReauthModal from \"./ReauthModal\";\nimport SettingsNav from \"./SettingsNav\";\nimport FormAlert from \"./FormAlert\";\nimport SettingsGeneral from \"./SettingsGeneral\";\nimport SettingsPassword from \"./SettingsPassword\";\nimport SettingsBilling from \"./SettingsBilling\";\nimport { useAuth } from \"./../util/auth.js\";\nimport \"./SettingsSection.scss\";\n\nfunction SettingsSection(props) {\n  const auth = useAuth();\n  const [formAlert, setFormAlert] = useState(null);\n\n  // State to control whether we show a re-authentication flow\n  // Required by some security sensitive actions, such as changing password.\n  const [reauthState, setReauthState] = useState({\n    show: false,\n  });\n\n  const validSections = {\n    general: true,\n    password: true,\n    billing: true,\n  };\n\n  const section = validSections[props.section] ? props.section : \"general\";\n\n  // Handle status of type \"success\", \"error\", or \"requires-recent-login\"\n  // We don't treat \"requires-recent-login\" as an error as we handle it\n  // gracefully by taking the user through a re-authentication flow.\n  const handleStatus = ({ type, message, callback }) => {\n    if (type === \"requires-recent-login\") {\n      // First clear any existing message\n      setFormAlert(null);\n      // Then update state to show re-authentication modal\n      setReauthState({\n        show: true,\n        // Failed action to try again after reauth\n        callback: callback,\n      });\n    } else {\n      // Display message to user (type is success or error)\n      setFormAlert({\n        type: type,\n        message: message,\n      });\n    }\n  };\n\n  return (\n    <Section\n      color={props.color}\n      size={props.size}\n      backgroundImage={props.backgroundImage}\n      backgroundImageOpacity={props.backgroundImageOpacity}\n    >\n      {reauthState.show && (\n        <ReauthModal\n          callback={reauthState.callback}\n          provider={auth.user.providers[0]}\n          onDone={() => setReauthState({ show: false })}\n        />\n      )}\n\n      <SettingsNav activeKey={section} parentColor={props.color} />\n      <div className=\"SettingsSection__container container\">\n        {formAlert && (\n          <FormAlert\n            type={formAlert.type}\n            message={formAlert.message}\n            style={{ maxWidth: \"450px\" }}\n          />\n        )}\n\n        {section === \"general\" && (\n          <SettingsGeneral parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"password\" && (\n          <SettingsPassword parentColor={props.color} onStatus={handleStatus} />\n        )}\n\n        {section === \"billing\" && (\n          <SettingsBilling parentColor={props.color} onStatus={handleStatus} />\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport default SettingsSection;\n"]},"metadata":{},"sourceType":"module"}